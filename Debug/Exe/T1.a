;#define F_CPU 1000000UL
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <io.h>
;#include <delay.h>
;
;
;
;void initialization_defolt()
; 0000 0009 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000A     // Declare your local variables here
; 0000 000B 
; 0000 000C     // Input/Output Ports initialization
; 0000 000D     // Port B initialization
; 0000 000E     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 000F     DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (1<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0010     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0011     PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0012 
; 0000 0013     // Port C initialization
; 0000 0014     // Function: Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0015     DDRC=(0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0016     // State: Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0017     PORTC=(0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0018 
; 0000 0019     // Port D initialization
; 0000 001A     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 001B     DDRD=(1<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 001C     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 001D     PORTD=(1<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 001E 
; 0000 001F     // Timer/Counter 0 initialization
; 0000 0020     // Clock source: System Clock
; 0000 0021     // Clock value: Timer 0 Stopped
; 0000 0022     TCCR0=(0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0023     TCNT0=0x00;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0024 
; 0000 0025     // Timer/Counter 1 initialization
; 0000 0026     // Clock source: System Clock
; 0000 0027     // Clock value: Timer1 Stopped
; 0000 0028     // Mode: Normal top=0xFFFF
; 0000 0029     // OC1A output: Disconnected
; 0000 002A     // OC1B output: Disconnected
; 0000 002B     // Noise Canceler: Off
; 0000 002C     // Input Capture on Falling Edge
; 0000 002D     // Timer1 Overflow Interrupt: Off
; 0000 002E     // Input Capture Interrupt: Off
; 0000 002F     // Compare A Match Interrupt: Off
; 0000 0030     // Compare B Match Interrupt: Off
; 0000 0031     TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0032     TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0033     TCNT1H=0x00;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0034     TCNT1L=0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0035     ICR1H=0x00;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0036     ICR1L=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0037     OCR1AH=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0038     OCR1AL=0x00;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0039     OCR1BH=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 003A     OCR1BL=0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 003B 
; 0000 003C     // Timer/Counter 2 initialization
; 0000 003D     // Clock source: System Clock
; 0000 003E     // Clock value: Timer2 Stopped
; 0000 003F     // Mode: Normal top=0xFF
; 0000 0040     // OC2 output: Disconnected
; 0000 0041     ASSR=0<<AS2;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0042     TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0043     TCNT2=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0044     OCR2=0x00;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0045 
; 0000 0046     // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0047     TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<TOIE0);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0048 
; 0000 0049     // External Interrupt(s) initialization
; 0000 004A     // INT0: Off
; 0000 004B     // INT1: Off
; 0000 004C     MCUCR=(1<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 004D     GICR|=(1<<INT1) | (0<<INT0);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 004E     MCUCR=(1<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 004F     GIFR=(1<<INTF1) | (0<<INTF0);
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0050 
; 0000 0051     // USART initialization
; 0000 0052     // USART disabled
; 0000 0053     UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0054 
; 0000 0055     // Analog Comparator initialization
; 0000 0056     // Analog Comparator: Off
; 0000 0057     // The Analog Comparator's positive input is
; 0000 0058     // connected to the AIN0 pin
; 0000 0059     // The Analog Comparator's negative input is
; 0000 005A     // connected to the AIN1 pin
; 0000 005B     ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 005C     SFIOR=(0<<ACME);
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 005D 
; 0000 005E     // ADC initialization
; 0000 005F     // ADC disabled
; 0000 0060     ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0061 
; 0000 0062     // SPI initialization
; 0000 0063     // SPI disabled
; 0000 0064     SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0065 
; 0000 0066     // TWI initialization
; 0000 0067     // TWI disabled
; 0000 0068     TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0069 }
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;
;void init_pwm()
; 0000 006C {
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 006D     ASSR = 0x00;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 006E     TCCR2 = 0b01101010;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 006F     TCNT2 = 0x00;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0070     OCR2 = 0x00;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0071 }
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;
;void check_PC()
; 0000 0074 {
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0075     //int i;
; 0000 0076     //for(i = 0; i < 8; i++)
; 0000 0077     //{
; 0000 0078         if(~PINC & (1<<1))
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0079             {
; 0000 007A             PORTD ^= (1<<7);
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 007B             delay_ms(10);
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 007C             PORTD ^= (1<<7);
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 007D             }
; 0000 007E 
; 0000 007F     //}
; 0000 0080 }
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;
;void main()
; 0000 0083 {
;PCODE: $00000074 VOL: 0
; 0000 0084     short int pwm_dir = 1; // 1 - forward, 0 - back
; 0000 0085     #asm("cli")
;	pwm_dir -> R16,R17
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
	cli
;PCODE: $00000078 VOL: 0
; 0000 0086     initialization_defolt();
;PCODE: $00000079 VOL: 0
; 0000 0087     init_pwm();
;PCODE: $0000007A VOL: 0
; 0000 0088     #asm("sei")
;PCODE: $0000007B VOL: 0
	sei
;PCODE: $0000007C VOL: 0
; 0000 0089     while (1)
;PCODE: $0000007D VOL: 0
; 0000 008A     {
; 0000 008B       if(pwm_dir)
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 008C       {
; 0000 008D         OCR2++;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 008E       }
; 0000 008F       else OCR2--;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0090       delay_us(500);
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 0091       if(OCR2 == 0xFF)
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0092         pwm_dir = 0;
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0093       else if(OCR2 == 0x00)
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0094         pwm_dir = 1;
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0095     }
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 0096 }
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0000 0099 {
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 009A     check_PC();
;PCODE: $0000009F VOL: 0
; 0000 009B }
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
